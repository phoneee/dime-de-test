version: '3.4'

x-airflow-common:
  &airflow-common
  build: ./airflow
  user: "${AIRFLOW_UID:-50000}:0"
  environment:
    &airflow-common-env
    POSTGRES_USER: airflow
    POSTGRES_PASSWORD: airflow
    POSTGRES_DB: airflow
    AIRFLOW__CORE__FERNET_KEY: UKMzEm3yIuFYEq1y3-2FxPNWSVwRASpahmQ9kQfEr8E=
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: True
    AIRFLOW__CORE__LOAD_EXAMPLES: False
    AIRFLOW_UID: 50000
    AIRFLOW_GID: 0
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-metadata/airflow
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: False
  volumes:
    - ./container-data/airflow/dags:/opt/airflow/dags
    - ./container-data/airflow/logs:/opt/airflow/logs
    - ./container-data/airflow/plugins:/opt/airflow/plugins
  depends_on:
    &airflow-common-depends-on
    airflow-metadata:
      condition: service_healthy

services:
  postgres-data:
    image: postgres:13-alpine
    container_name: finacial-data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=financial
    volumes:
      - ./container-data/.postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  python:
    build: ./python
    ports:
      - "8888:8888"
    volumes:
      - ./container-data/notebooks:/opt/app/data
    entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --notebook-dir=/opt/app/data --allow-root'

  airflow-metadata:
    image: postgres:13
    container_name: airflow-metadata
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    volumes:
      - ./container-data/.airflow-metadata:/var/lib/postgresql/data
    environment:
      <<: *airflow-common-env

  scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID:-50000}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    environment:
      <<: *airflow-common-env

